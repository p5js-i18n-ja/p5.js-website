---
import type { CollectionEntry } from "astro:content";
import Head from "@components/Head/index.astro";
import BaseLayout from "./BaseLayout.astro";
import GridItemLibrary from "@components/GridItem/Library.astro";
import { setJumpToState, type JumpToLink } from "../globals/state";
import { getCurrentLocale, getUiTranslator } from "../i18n/utils";
import { categories } from "../content/libraries/config";

interface Props {
  entries: CollectionEntry<"libraries">[];
  title: string;
}
type LibraryEntry = CollectionEntry<"libraries">;

const currentLocale = getCurrentLocale(Astro.url.pathname);
const t = await getUiTranslator(currentLocale);

const { entries } = Astro.props;

function strCompare(a: string, b: string) {
  if (a < b) {
    return -1;
  }
  if (a > b) {
    return 1;
  }
  return 0;
}

const sections = categories
  .map((slug) => {
    const name = t("libraryCategories", slug);
    const sectionEntries = entries
      .filter((e: LibraryEntry) => e.data.category === slug)
      .sort((a: LibraryEntry, b: LibraryEntry) =>
        strCompare(a.data.name.toLowerCase(), b.data.name.toLowerCase())
      );

    return { slug, name, sectionEntries };
  })
  .filter((section) => section.sectionEntries.length > 0);

const pageJumpToLinks = categories.map((category) => ({
  url: `/libraries#${category}`,
  label: t("libraryCategories", category),
}));

setJumpToState({
  heading: t("Libraries") as string,
  links: pageJumpToLinks as JumpToLink[],
});
---

<Head title="Libraries" locale={currentLocale} />

<BaseLayout
  title="Libraries"
  subtitle={t("briefPageDescriptions", "Libraries") as string}
  variant="item"
  topic="community"
>
  {
    sections.map(({ slug, name, sectionEntries }) => (
      <section>
        <h2 id={slug}>{name}</h2>
        <ul class="content-grid-simple">
          {sectionEntries.map((entry: LibraryEntry) => (
            <li>
              <GridItemLibrary item={entry} />
            </li>
          ))}
        </ul>
      </section>
    ))
  }
</BaseLayout>
